# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
    paths-ignore: 
      - 'docs/**'
      - 'reports/**'
      - '*.md'
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    environment: develop
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4

    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Unit Tests
      working-directory: backend
      run: go test -v ./...

    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u hienle2004 --password-stdin

    - name: Build and Push Docker Image
      working-directory: backend
      run: |
        docker build -t hienle2004/coin-price-be-go-demo .
        docker push hienle2004/coin-price-be-go-demo

    - name: Remove Docker Image
      run: |
        sudo docker rmi hienle2004/coin-price-be-go-demo

    - name: Install Docker Compose
      run: |
        DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')
        sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    # - name: Deploy
    #   run: |
    #     sshpass -p ${{ secrets.VPS_PASSWORD }} ssh -o StrictHostKeyChecking=no root@${{ secrets.VPS_IP }} "
    #       cd server
          
    #       echo 'y' | sudo docker container prune
    #       sudo docker rmi $(docker images -a -q) 2>dev>null || true  
    #       sudo docker compose down
    #       sudo docker compose pull

    #       tmux kill-session -t spring 2>/dev/null || true 
    #       tmux new-session -d -s spring 'sudo docker compose up'
    #     "
